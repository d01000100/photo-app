{"version":3,"sources":["features/chat/Chat.module.css","features/search/Search.module.css","features/search/searchSlice.js","app/search_mockup.js","features/search/Search.js","features/chat/chatSlice.js","features/chat/Chat.js","features/chat/ContactList.js","features/user_profile/UserProfile.js","routes/index.js","features/navbar/Navbar.js","App.js","features/navbar/navSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","searchSlice","createSlice","name","initialState","isSearching","areThereMore","currentPage","query","results","reducers","newResults","state","action","payload","photos","appendResults","concat","startSearch","startAppend","setSearch","actions","getResults","search","getAreThereMore","getQuery","getCurrentPage","data","src","tags","doesTagMatch","photoInfo","FuzzySet","get","searchPhotos","pageNumber","pageSize","allPhotos","filter","length","console","log","start","end","slice","Photo","props","className","styles","resultsPhoto","id","photoData","style","background","process","alt","Search","dispatch","useDispatch","photosFound","useSelector","lastQuery","type","placeholder","onChange","event","newSearch","target","value","map","onClick","getMore","chatSlice","allMessages","image","messages","sender","content","activeChat","setActiveChat","username","addMessage","recipient","JSON","stringify","newMessage","push","allMmessages","getAllContacts","chat","Object","values","getContact","chatMessage","messageSelf","messageOther","Input","useState","inputText","setInputText","getSelectedContact","sendMessage","message","trim","onKeyUp","key","Messages","useParams","scrollWindow","React","createRef","useEffect","current","scrollTop","scrollHeight","to","ref","index","Contact","info","imgSrc","contact","chatInitial","ContactList","contacts","contactData","UserProfile","useRouteParams","Routes","path","exact","component","NavBar","activeClassName","width","height","viewBox","fill","xmlns","fillRule","d","App","href","title","navSlice","page","setPage","configureStore","reducer","searchReducer","nav","navReducer","chatReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d2e8129.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatInitial\":\"Chat_chatInitial___E90B\",\"contact\":\"Chat_contact__24oqk\",\"chat\":\"Chat_chat__-zNOc\",\"chatMessage\":\"Chat_chatMessage__NTM4g\",\"messageSelf\":\"Chat_messageSelf__yFSji\",\"messageOther\":\"Chat_messageOther__2aTJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsPhoto\":\"Search_resultsPhoto__1OSxI\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState: {\r\n    isSearching: false,\r\n    areThereMore: false,\r\n    currentPage: 1,\r\n    query: '',\r\n    results: []\r\n  },\r\n  reducers: {\r\n    newResults: (state, action) => {\r\n      state.results = action.payload.photos\r\n      state.areThereMore = action.payload.areThereMore\r\n      state.query = action.payload.query\r\n      state.isSearching = false\r\n      state.currentPage = 1\r\n    },\r\n    appendResults: (state, action) => {\r\n      state.results = state.results.concat(action.payload.photos)\r\n      state.areThereMore = action.payload.areThereMore\r\n      state.isSearching = false;\r\n      state.currentPage++;\r\n    },\r\n    startSearch: state => {\r\n      state.isSearching = true\r\n      state.results = []\r\n    },\r\n    startAppend: state => { isSearching = true},\r\n    setSearch: (state, action) => { state.query = action.payload }\r\n  },\r\n});\r\n\r\nexport const { newResults, appendResults, startSearch, startAppend } = searchSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const getResults = state => state.search.results;\r\nexport const isSearching = state => state.search.isSearching;\r\nexport const getAreThereMore = state => state.search.areThereMore;\r\nexport const getQuery = state => state.search.query;\r\nexport const getCurrentPage = state => state.search.currentPage;\r\n\r\nexport default searchSlice.reducer;","import FuzzySet from 'fuzzyset.js'\r\n\r\nconst data = [\r\n  { \r\n    src: \"img/coons/photo_2020-10-29_09-29-07.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-11_12-58-06.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-10-31_14-14-37.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-13_22-34-41.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-06_11-25-26.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-14_15-17-33.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-06_23-10-35.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-17_13-17-14.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-11_12-57-54.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-05_11-46-58.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-40.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-14_19-33-01.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-43.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-37.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-47.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-39.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n]\r\n\r\nfunction doesTagMatch(photoInfo, query) {\r\n  let tagsFuzzy = FuzzySet(photoInfo.tags)\r\n  let results = tagsFuzzy.get(query)\r\n  if (!results) return false;\r\n  let [[number]] = results;\r\n  return number > 0.7\r\n}\r\n\r\nexport function searchPhotos(query, pageNumber = 1, pageSize = 6) {\r\n  if (query == \"\") {\r\n    return {photos:[], areThereMore: false}\r\n  }\r\n\r\n  let allPhotos = data.filter(photoInfo => doesTagMatch(photoInfo, query))\r\n  if (allPhotos.length <= pageSize) {\r\n    console.log(\"returning all photos\")\r\n    return {photos: allPhotos, areThereMore: false};\r\n  }\r\n\r\n  let start = (pageNumber - 1)*pageSize;\r\n  let end = pageSize * pageNumber;\r\n  console.log(`returning from ${start} to ${end}`)\r\n  return {\r\n    photos: allPhotos.slice(start, end),\r\n    areThereMore: allPhotos.length > pageSize * pageNumber\r\n  }\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newResults, getResults, getAreThereMore, startSearch, getCurrentPage, getQuery, startAppend, appendResults } from './searchSlice'\r\nimport { searchPhotos } from '../../app/search_mockup'\r\nimport styles from './Search.module.css';\r\n\r\nfunction Photo(props) {\r\n  return (\r\n    <div className={`col-4 ${styles.resultsPhoto}`}\r\n      id={props.photoData.src}>\r\n      <div style={{background: `url(${process.env.PUBLIC_URL + \"/\" + props.photoData.src}) no-repeat`}}\r\n      alt={`Photo ${props.photoData.src} not found`} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function Search () {\r\n  const dispatch = useDispatch();\r\n  const photosFound = useSelector(getResults)\r\n  const areThereMore = useSelector(getAreThereMore)\r\n  const currentPage = useSelector(getCurrentPage)\r\n  const lastQuery = useSelector(getQuery)\r\n\r\n\r\n  function newSearch(query) {\r\n    dispatch(startSearch)\r\n    let results = searchPhotos(query);\r\n    results.query = query;\r\n    dispatch(newResults(results));\r\n  }\r\n\r\n  function getMore() {\r\n    dispatch(startAppend)\r\n    let results = searchPhotos(lastQuery, currentPage + 1);\r\n    dispatch(appendResults(results))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"App-header\">Search</h2>\r\n      <input type=\"text\" className=\"App-wide-input\" placeholder=\"Search all photos (try with 'raccoon', 'animal', or 'frog')\"\r\n       onChange={event => newSearch(event.target.value)}></input>\r\n      <div className=\"row\">\r\n        {photosFound.map( data =>\r\n          (\r\n            <Photo photoData={data} />\r\n          )\r\n        )}\r\n      </div>\r\n      {areThereMore && \r\n      <button className=\"App-button\"\r\n        onClick={() => getMore()}>\r\n        SEE MORE\r\n      </button>}\r\n    </div>\r\n  )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState: {\r\n    allMessages: {\r\n      \"Roberto Meléndez\": {\r\n        name: \"Roberto Meléndez\",\r\n        image: \"img/coons/photo_2020-11-14_15-17-33.jpg\",\r\n        messages: [\r\n          {\r\n            sender: \"other\",\r\n            content: \"Hello man, how are you?\"\r\n          },\r\n          {\r\n            sender: \"self\",\r\n            content: \"Good, you?\"\r\n          },\r\n          {\r\n            sender: \"other\",\r\n            content: \"Not bad\"\r\n          },\r\n        ]\r\n      },\r\n      \"Bruce Stevenson\": {\r\n        name: \"Bruce Stevenson\",\r\n        image: \"img/frogs/photo_2020-11-18_19-20-43.jpg\",\r\n        messages: [\r\n          {\r\n            sender: \"other\",\r\n            content: \"Hello man, what's going on!?\"\r\n          },\r\n          {\r\n            sender: \"self\",\r\n            content: \"Nothing much, what's going on with you?\"\r\n          },\r\n          {\r\n            sender: \"other\",\r\n            content: \"I tell you what's going on!!\"\r\n          },\r\n          {\r\n            sender: \"other\",\r\n            content: \"The budget was 500 and now it's 200!!\"\r\n          },\r\n          {\r\n            sender: \"self\",\r\n            content: \"It’s been more than a decade since the first of the films in Peter Jackson’s Lord of the Rings trilogy was released, and although fans are now eagerly anticipating a return to Middle-earth with his upcoming Hobbit films, well, one does NOT simply walk away from where it all began. Today, we feature an article written for TheOneRing.net by guest author Leslie Martinka, Marketing Manager at Hark.com, the world’s largest platform for pop culture quotes and images, on the phenomenon that is Tolkien’s Lord of the Rings, and the top 20 quotes from Peter Jackson’s films:\"\r\n          },\r\n        ]\r\n      },\r\n    },\r\n    activeChat: null,\r\n  },\r\n  reducers: {\r\n    setActiveChat: (state,{payload}) => {\r\n      if (payload === null) {\r\n        state.activeChat = null\r\n        return\r\n      }\r\n      let {username} = payload\r\n      state.activeChat = username\r\n    },\r\n    addMessage: (state,{payload}) => {\r\n      let {recipient,content} = payload\r\n      console.log(`Payload is ${JSON.stringify(payload)}`)\r\n      let chats = state.allMessages\r\n      let contactInfo = chats[recipient]\r\n      let newMessage = {\r\n        sender: \"self\",\r\n        content: content\r\n      }\r\n      if (contactInfo) {\r\n        state.allMessages[recipient].messages.push(newMessage)\r\n      } else {\r\n        state.allMmessages[recipient] = {\r\n          name: recipient,\r\n          messages: [newMessage]\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const {setActiveChat, addMessage} = chatSlice.actions;\r\n\r\nexport const getAllContacts = ({chat: {allMessages}}) => Object.values(allMessages) //.map(({name, image}) => {name, image})\r\nexport const getContact = ({chat: {activeChat, allMessages}}) => allMessages[activeChat]\r\n\r\nexport default chatSlice.reducer","import React,{ useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport { setActiveChat, addMessage, getContact as getSelectedContact } from './chatSlice.js'\r\nimport styles from './Chat.module.css';\r\n\r\nlet {chatMessage, messageSelf, messageOther, chat} = styles\r\n\r\nfunction Input() {\r\n\r\n  let [inputText, setInputText] = useState('')\r\n\r\n  let {name} = useSelector(getSelectedContact);\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  function sendMessage() {\r\n    let message = inputText.trim()\r\n    if (message == \"\") return\r\n    dispatch(addMessage({recipient: name, content: message}))\r\n    setInputText('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-group\">\r\n      <input className=\"form-control\" type=\"text\"\r\n        value={inputText} onChange={(event) => {setInputText(event.target.value)}}\r\n        onKeyUp={(event) => {\r\n          if (event.key == \"Enter\") {\r\n            sendMessage()\r\n          }\r\n        }}\r\n      ></input>\r\n      <div className=\"input-group-append input-group-sm\" onClick={sendMessage}>\r\n        <span className=\"input-group-text\">\r\n          <img className=\"icon\" src={`${process.env.PUBLIC_URL}/svg/sent.svg`}\r\n            alt=\"Send icon\"></img>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Messages () {\r\n\r\n  const dispatch = useDispatch();\r\n  let {username} = useParams()\r\n  dispatch(setActiveChat({username: username}))\r\n  let {name, image, messages} = useSelector(getSelectedContact);\r\n\r\n  let scrollWindow = React.createRef();\r\n\r\n  useEffect(() => {\r\n    scrollWindow.current.scrollTop = scrollWindow.current.scrollHeight\r\n  }, [messages])\r\n\r\n  return (\r\n    <div>\r\n      <h3>{name}</h3>\r\n      <Link to=\"/chat\">\r\n        <i>{\"< All messages\"}</i>\r\n      </Link>\r\n      <div className={`${chat} scroll`} ref={scrollWindow}>\r\n        {messages.map(({sender, content}, index) => \r\n          <div key={index} className={`${chatMessage} ${sender == 'self' ? messageSelf : messageOther}`}>\r\n            {content}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Input />\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { getAllContacts } from './chatSlice.js'\r\nimport styles from './Chat.module.css';\r\n\r\nfunction Contact(props) {\r\n  let name = props.info.name;\r\n  let imgSrc = props.info.image\r\n\r\n  return (\r\n    <Link to={`/chat/${name}`}>\r\n      <li className={`list-group-item list-group-item-action ${styles.contact}`}>\r\n        <img className={styles.chatInitial} src={process.env.PUBLIC_URL + \"/\" + imgSrc}\r\n          alt={`${name}'s profile icon`} />\r\n        <span>{name}</span>\r\n      </li>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getAllContacts);\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {contacts.map(contactData => <Contact info={contactData} />)}\r\n    </ul>\r\n  )\r\n}","import React from 'react'\r\nimport { useParams as useRouteParams, Redirect } from 'react-router-dom'\r\n\r\nexport default function UserProfile() {\r\n\r\n  // Los parametros indicados con placeholders definidos en Route\r\n  // Si la ruta actual corresponde a una que contenga un parametro \r\n  // nombrado 'placeholder', se deconstruye aqui\r\n  let { username } = useRouteParams()\r\n\r\n  return (\r\n    <h2>\r\n      {username}\r\n      <Redirect to=\"/chat\" />\r\n    </h2>\r\n  )\r\n}","import React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Search } from '../features/search/Search';\r\nimport Messages from '../features/chat/Chat';\r\nimport ContactList from '../features/chat/ContactList';\r\nimport UserProfile from '../features/user_profile/UserProfile'\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/search\" exact component={Search} />\r\n      <Route path=\"/chat/:username\" component={Messages} />\r\n      <Route path=\"/chat\" exact component={ContactList} />\r\n      <Route path=\"/profile/:username\">\r\n        <UserProfile />\r\n      </Route>\r\n      <Route component={ContactList} /> { /* Default page */ }\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport function NavBar() {\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand fixed-bottom navbar-light\">\r\n      <ul className=\"navbar-nav mx-auto\">\r\n        <li>\r\n          <NavLink className=\"nav-link\" to='/search' activeClassName=\"active\">\r\n            <svg width=\"50px\" height=\"50px\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\r\n              <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\r\n            </svg>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"nav-link\"  to='/chat' activeClassName=\"active\">\r\n            <svg width=\"50px\" height=\"50px\" viewBox=\"0 0 16 16\" className=\"bi bi-chat-dots\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fillRule=\"evenodd\" d=\"M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894zm-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z\"/>\r\n              <path d=\"M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n            </svg>\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport Routes from './routes';\r\nimport { NavBar } from './features/navbar/Navbar';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App container-sm\">\r\n      <BrowserRouter>\r\n        <Routes />\r\n        <NavBar />\r\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const navSlice = createSlice({\r\n  name: 'nav',\r\n  initialState: {\r\n    page: 'chat'\r\n  },\r\n  reducers: {\r\n    setPage: (state, action) => {\r\n      state.page = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {setPage} = navSlice.actions;\r\n\r\nexport const getPage = state => state.nav.page;\r\n\r\nexport default navSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport searchReducer from '../features/search/searchSlice';\r\nimport navReducer from '../features/navbar/navSlice';\r\nimport chatReducer from '../features/chat/chatSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    search: searchReducer,\r\n    nav: navReducer,\r\n    chat: chatReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}