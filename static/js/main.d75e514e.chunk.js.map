{"version":3,"sources":["features/search/Search.module.css","features/navbar/navSlice.js","features/navbar/Navbar.js","features/search/searchSlice.js","app/search_mockup.js","features/search/Search.js","features/chat/chatSlice.js","features/chat/Chat.js","App.js","app/store.js","serviceWorker.js","index.js","features/chat/Chat.module.css"],"names":["module","exports","navSlice","createSlice","name","initialState","page","reducers","setPage","state","action","payload","actions","getPage","nav","NavBar","dispatch","useDispatch","useSelector","className","onClick","width","height","viewBox","fill","xmlns","fillRule","d","searchSlice","isSearching","areThereMore","currentPage","query","results","newResults","photos","appendResults","concat","startSearch","startAppend","setSearch","getResults","search","getAreThereMore","getQuery","getCurrentPage","data","src","tags","doesTagMatch","photoInfo","FuzzySet","get","searchPhotos","pageNumber","pageSize","allPhotos","filter","length","console","log","start","end","slice","Photo","props","styles","resultsPhoto","id","photoData","style","background","process","alt","Search","photosFound","lastQuery","type","placeholder","onChange","event","newSearch","target","value","map","getMore","chatSlice","messages","image","sender","content","activeChat","setActiveChat","addMessage","contactInfo","contactName","newMessage","messsage","push","getContacts","Object","values","chat","getSelectedContact","Contact","info","imgSrc","contact","chatInitial","ContactList","contacts","contactData","Messages","selectedContact","href","Chat","App","configureStore","reducer","searchReducer","navReducer","chatReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d75e514e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsPhoto\":\"Search_resultsPhoto__1OSxI\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const navSlice = createSlice({\r\n  name: 'nav',\r\n  initialState: {\r\n    page: 'chat'\r\n  },\r\n  reducers: {\r\n    setPage: (state, action) => {\r\n      state.page = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {setPage} = navSlice.actions;\r\n\r\nexport const getPage = state => state.nav.page;\r\n\r\nexport default navSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setPage, getPage } from './navSlice.js'\r\n\r\nexport function NavBar() {\r\n  const dispatch = useDispatch();\r\n  const page = useSelector(getPage);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand fixed-bottom navbar-light\">\r\n      <ul className=\"navbar-nav mx-auto\">\r\n        <li className={`nav-item ${page == \"search\" ? \"active\" : \"\"}`}>\r\n          <a className=\"nav-link\" onClick={() => dispatch(setPage('search'))}>\r\n          <svg width=\"50px\" height=\"50px\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\r\n            <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\r\n          </svg>\r\n          </a>\r\n        </li>\r\n        <li className={`nav-item ${page == \"chat\" ? \"active\" : \"\"}`}>\r\n          <a className=\"nav-link\"  onClick={() => dispatch(setPage('chat'))}>\r\n            <svg width=\"50px\" height=\"50px\" viewBox=\"0 0 16 16\" className=\"bi bi-chat-dots\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fillRule=\"evenodd\" d=\"M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894zm-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z\"/>\r\n              <path d=\"M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n            </svg>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState: {\r\n    isSearching: false,\r\n    areThereMore: false,\r\n    currentPage: 1,\r\n    query: '',\r\n    results: []\r\n  },\r\n  reducers: {\r\n    newResults: (state, action) => {\r\n      state.results = action.payload.photos\r\n      state.areThereMore = action.payload.areThereMore\r\n      state.query = action.payload.query\r\n      state.isSearching = false\r\n      state.currentPage = 1\r\n    },\r\n    appendResults: (state, action) => {\r\n      state.results = state.results.concat(action.payload.photos)\r\n      state.areThereMore = action.payload.areThereMore\r\n      state.isSearching = false;\r\n      state.currentPage++;\r\n    },\r\n    startSearch: state => {\r\n      state.isSearching = true\r\n      state.results = []\r\n    },\r\n    startAppend: state => { isSearching = true},\r\n    setSearch: (state, action) => { state.query = action.payload }\r\n  },\r\n});\r\n\r\nexport const { newResults, appendResults, startSearch, startAppend } = searchSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const getResults = state => state.search.results;\r\nexport const isSearching = state => state.search.isSearching;\r\nexport const getAreThereMore = state => state.search.areThereMore;\r\nexport const getQuery = state => state.search.query;\r\nexport const getCurrentPage = state => state.search.currentPage;\r\n\r\nexport default searchSlice.reducer;","import FuzzySet from 'fuzzyset.js'\r\n\r\nconst data = [\r\n  { \r\n    src: \"img/coons/photo_2020-10-29_09-29-07.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-11_12-58-06.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-10-31_14-14-37.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-13_22-34-41.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-06_11-25-26.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-14_15-17-33.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-06_23-10-35.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-17_13-17-14.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  { \r\n    src: \"img/coons/photo_2020-11-11_12-57-54.jpg\",\r\n    tags: [\"raccoon\", \"animal\"],\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-05_11-46-58.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-40.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-14_19-33-01.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-43.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-37.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-47.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n  {\r\n    src: \"img/frogs/photo_2020-11-18_19-20-39.jpg\",\r\n    tags: [\"frog\", \"animal\"]\r\n  },\r\n]\r\n\r\nfunction doesTagMatch(photoInfo, query) {\r\n  let tagsFuzzy = FuzzySet(photoInfo.tags)\r\n  let results = tagsFuzzy.get(query)\r\n  if (!results) return false;\r\n  let [[number]] = results;\r\n  return number > 0.7\r\n}\r\n\r\nexport function searchPhotos(query, pageNumber = 1, pageSize = 6) {\r\n  if (query == \"\") {\r\n    return {photos:[], areThereMore: false}\r\n  }\r\n\r\n  let allPhotos = data.filter(photoInfo => doesTagMatch(photoInfo, query))\r\n  if (allPhotos.length <= pageSize) {\r\n    console.log(\"returning all photos\")\r\n    return {photos: allPhotos, areThereMore: false};\r\n  }\r\n\r\n  let start = (pageNumber - 1)*pageSize;\r\n  let end = pageSize * pageNumber;\r\n  console.log(`returning from ${start} to ${end}`)\r\n  return {\r\n    photos: allPhotos.slice(start, end),\r\n    areThereMore: allPhotos.length > pageSize * pageNumber\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newResults, getResults, getAreThereMore, startSearch, getCurrentPage, getQuery, startAppend, appendResults } from './searchSlice'\r\nimport { searchPhotos } from '../../app/search_mockup'\r\nimport styles from './Search.module.css';\r\n\r\nfunction Photo(props) {\r\n  return (\r\n    <div className={`col-4 ${styles.resultsPhoto}`}\r\n      id={props.photoData.src}>\r\n      <div style={{background: `url(${process.env.PUBLIC_URL + \"/\" + props.photoData.src}) no-repeat`}}\r\n      alt={`Photo ${props.photoData.src} not found`} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function Search () {\r\n  const dispatch = useDispatch();\r\n  const photosFound = useSelector(getResults)\r\n  const areThereMore = useSelector(getAreThereMore)\r\n  const currentPage = useSelector(getCurrentPage)\r\n  const lastQuery = useSelector(getQuery)\r\n\r\n\r\n  function newSearch(query) {\r\n    dispatch(startSearch)\r\n    let results = searchPhotos(query);\r\n    results.query = query;\r\n    dispatch(newResults(results));\r\n  }\r\n\r\n  function getMore() {\r\n    dispatch(startAppend)\r\n    let results = searchPhotos(lastQuery, currentPage + 1);\r\n    dispatch(appendResults(results))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"App-header\">Search</h2>\r\n      <input type=\"text\" className=\"App-wide-input\" placeholder=\"Search all photos (try with 'raccoon', 'animal', or 'frog')\"\r\n       onChange={event => newSearch(event.target.value)}></input>\r\n      <div className=\"row\">\r\n        {photosFound.map( data =>\r\n          (\r\n            <Photo photoData={data} />\r\n          )\r\n        )}\r\n      </div>\r\n      {areThereMore && \r\n      <button className=\"App-button\"\r\n        onClick={() => getMore()}>\r\n        SEE MORE\r\n      </button>}\r\n    </div>\r\n  )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState: {\r\n    messages: {\r\n      \"Roberto Meléndez\": {\r\n        name: \"Roberto Meléndez\",\r\n        image: \"img/coons/photo_2020-11-14_15-17-33.jpg\",\r\n        messages: [\r\n          {\r\n            sender: \"other\",\r\n            content: \"Hello man, how are you?\"\r\n          },\r\n          {\r\n            sender: \"self\",\r\n            content: \"Good, you?\"\r\n          },\r\n          {\r\n            sender: \"other\",\r\n            content: \"Not bad\"\r\n          },\r\n        ]\r\n      },\r\n      \"Bruce Stevenson\": {\r\n        name: \"Bruce Stevenson\",\r\n        image: \"img/frogs/photo_2020-11-18_19-20-43.jpg\",\r\n        messages: [\r\n          {\r\n            sender: \"other\",\r\n            content: \"Hello man, what's going on!?\"\r\n          },\r\n          {\r\n            sender: \"self\",\r\n            content: \"Nothing much, what's going on with you?\"\r\n          },\r\n          {\r\n            sender: \"other\",\r\n            content: \"I tell you what's going on!!\"\r\n          },\r\n          {\r\n            sender: \"other\",\r\n            content: \"The budget was 500 and now it's 200!!\"\r\n          },\r\n        ]\r\n      },\r\n    },\r\n    activeChat: null,\r\n  },\r\n  reducers: {\r\n    setActiveChat: (state,action) => {\r\n      state.activeChat = action.payload\r\n    },\r\n    addMessage: (state,action) => {\r\n      let messages = state.messages\r\n      let contactInfo = messages[action.contactName]\r\n      let newMessage = {\r\n        sender: \"self\",\r\n        content: action.messsage\r\n      }\r\n      if (contactInfo) {\r\n        state.messages[action.contactName].messages.push(newMessage)\r\n      } else {\r\n        state.messages[action.contactName] = {\r\n          name: action.contactName,\r\n          messages: [newMessage]\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const {setActiveChat, addMessage} = chatSlice.actions;\r\n\r\nexport const getContacts = state => Object.values(state.chat.messages) //.map(({name, image}) => {name, image})\r\nexport const getSelectedContact = state => state.chat.activeChat\r\n\r\nexport default chatSlice.reducer","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActiveChat, addMessage, getContacts, getSelectedContact } from './chatSlice.js'\r\nimport styles from './Chat.module.css';\r\n\r\nfunction Contact(props) {\r\n  let name = props.info.name;\r\n  let imgSrc = props.info.image\r\n  let initial = name[0];\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  return (\r\n    <li className={`list-group-item list-group-item-action ${styles.contact}`}\r\n      onClick={() => { dispatch(setActiveChat(props.info))}}>\r\n      <img className={styles.chatInitial} src={process.env.PUBLIC_URL + \"/\" + imgSrc} />\r\n      <span>{name}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getContacts);\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {contacts.map(contactData => <Contact info={contactData} />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nfunction Messages () {\r\n  let selectedContact = useSelector(getSelectedContact);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h3>{selectedContact.name}</h3>\r\n      <h4><i>WIP</i></h4>\r\n      <ul>\r\n        {selectedContact.messages.map(({sender, content}) => \r\n          <li>\r\n            <b>{sender == 'self' ? \"Me: \" : `${selectedContact.name}: `}</b>\r\n            {content}\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <a href=\"#\" onClick={() => { dispatch(setActiveChat(null))}}><i>Back</i></a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function Chat() {\r\n  const selectedContact = useSelector(getSelectedContact)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat</h1>\r\n      {selectedContact == null ?\r\n        <ContactList /> :\r\n        <Messages />\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavBar } from './features/navbar/Navbar';\r\nimport { getPage } from './features/navbar/navSlice';\r\nimport { Search } from './features/search/Search';\r\nimport { Chat } from './features/chat/Chat';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const page = useSelector(getPage)\r\n\r\n  return (\r\n    <div className=\"App container-sm\">\r\n      {\r\n        page == \"search\" ? <Search /> :\r\n        page == \"chat\" ? <Chat /> : \"\"\r\n      }\r\n      <NavBar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport searchReducer from '../features/search/searchSlice';\r\nimport navReducer from '../features/navbar/navSlice';\r\nimport chatReducer from '../features/chat/chatSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    search: searchReducer,\r\n    nav: navReducer,\r\n    chat: chatReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatInitial\":\"Chat_chatInitial___E90B\",\"contact\":\"Chat_contact__24oqk\"};"],"sourceRoot":""}